import React from 'react';

// Этот контекст будет содержать информацию, возвращаемую сервером
// при авторизации (в частности, адрес почты будет доступен через него).
// Наличие объекта будет свидетельствовать о наличии
// прав доступа к контенту, а null будет означать запрет.
// Пока это отдельный контекст. Возможно, впоследствии, его можно
// будет объединить с CurrentUserContext, когда взаимодействие
// с сервером станет осуществляться через единый домен.
export const AuthorizationContext = React.createContext();

// Данный контекст будет содержать информацию о пользователе,
// связанную с его профилем (имя, описание, аватар, _id (<--тот, который даётся старым сервером))
// Эта информация будет нужна нескольким компонентам
// на разных уровнях дерева.
export const CurrentUserContext = React.createContext();

// Через данный контекст каждому всплывающему окну будет доступен
// общий функционал, заведующий закрытием окна.
// Так как только одно окно в каждый момент времени может быть активно,
// то одного экземпляра данного функционала достаточно для
// совместного использования всеми окнами.
export const PopupClosableContext = React.createContext();

// Поля форм задаются на верхнем уровне, где им передаются все пропсы.
// Данный контекст будет передавать всем полям формы дополнительные
// необходимые данные от непосредственного родителя.
export const PopupWithFormContext = React.createContext();

// Данный контекст содержит признак isMakingRequest,
// используемый всеми компонентами для индикации запроса.
export const GeneralStateContext = React.createContext();
